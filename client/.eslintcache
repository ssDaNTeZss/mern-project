[{"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\index.js":"1","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\App.js":"2","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\routes.js":"4","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\AuthPage.js":"5","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\HomePage.js":"6","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\http.hook.js":"7","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\RegPage.js":"8","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\message.hook.js":"9","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\auth.hook.js":"10","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\context\\AuthContext.js":"11","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\ActivatePage.js":"12","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\Navbar.js":"13","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\PersonalDataPage.js":"14","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\AdminHomePage.js":"15","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\AdminNavbar.js":"16","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CustomSelect.js":"17","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CreateStatementPage.js":"18","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\DirectionsPage.js":"19","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\CreateDirectionPage.js":"20"},{"size":500,"mtime":1608129276431,"results":"21","hashOfConfig":"22"},{"size":849,"mtime":1609700434108,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2289,"mtime":1609874385988,"results":"25","hashOfConfig":"22"},{"size":5330,"mtime":1608749948546,"results":"26","hashOfConfig":"22"},{"size":3353,"mtime":1609782365934,"results":"27","hashOfConfig":"22"},{"size":1128,"mtime":1608750615974,"results":"28","hashOfConfig":"22"},{"size":9424,"mtime":1608936228059,"results":"29","hashOfConfig":"22"},{"size":211,"mtime":1607717363187,"results":"30","hashOfConfig":"22"},{"size":1660,"mtime":1609700307536,"results":"31","hashOfConfig":"22"},{"size":249,"mtime":1608752949743,"results":"32","hashOfConfig":"22"},{"size":3088,"mtime":1607965335236,"results":"33","hashOfConfig":"22"},{"size":2030,"mtime":1608753375555,"results":"34","hashOfConfig":"22"},{"size":51631,"mtime":1609790463934,"results":"35","hashOfConfig":"22"},{"size":1106,"mtime":1608751220725,"results":"36","hashOfConfig":"22"},{"size":1689,"mtime":1609872957683,"results":"37","hashOfConfig":"22"},{"size":511,"mtime":1609159283352,"results":"38","hashOfConfig":"22"},{"size":25333,"mtime":1609865007395,"results":"39","hashOfConfig":"22"},{"size":3424,"mtime":1609875648659,"results":"40","hashOfConfig":"22"},{"size":11430,"mtime":1609877551400,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1w02xvi",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\index.js",[],["92","93"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\App.js",["94","95"],"import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'materialize-css';\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport {useHttp} from \"./hooks/http.hook\";\n\nfunction App() {\n    const {token, login, logout, userId, userName, role} = useAuth();\n    const isAuthenticated = !!token;\n    const routes = useRoutes(isAuthenticated, role);\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAuthenticated, userName, role\n        }}>\n            <Router>\n                <div className=\"navigationPanel\">\n                    {routes}\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\routes.js",["96","97"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\AuthPage.js",["98","99","100","101"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const loginHandler = async (values) => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/login',\r\n                'POST',\r\n                values);\r\n            auth.login(data.token, data.userId, data.userName, data.role);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        email: yup.string()\r\n            .email('Введите верный email')\r\n            .required('Поле необходимо заполнить'),\r\n        password: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .min(8, \"Пароль должен быть длиннее 8 символов\")\r\n            .required('Поле необходимо заполнить'),\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => {\r\n                    loginHandler(values);\r\n                }}\r\n                validationSchema={validationsSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Авторизация</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='email'\r\n                                            className='red-input'\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}/>\r\n                                        <label htmlFor='email'>Email</label>\r\n                                        {touched.email && errors.email &&\r\n                                        <p className=\"red-text\">{errors.email}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}/>\r\n                                        <label htmlFor='password'>Пароль</label>\r\n                                        {touched.password && errors.password &&\r\n                                        <p className=\"red-text\">{errors.password}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Войти\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/registration\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Регистрация\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\HomePage.js",["102","103","104","105"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Navbar} from \"../components/Navbar\";\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Formik} from \"formik\";\r\nimport M from \"materialize-css\";\r\n\r\nexport const HomePage = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault();\r\n        auth.logout();\r\n        history.push('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        let elems = document.querySelectorAll('.collapsible', 'select');\r\n        let instances = M.Collapsible.init(elems, {});\r\n\r\n        let elems2 = document.querySelectorAll('select');\r\n        let instances2 = M.FormSelect.init(elems2, {});\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\"><Navbar/></div>\r\n            <div className=\"col app-main valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s10\">\r\n                        <h4>Система электронной подачи документов</h4>\r\n                    </div>\r\n                    <div className=\"col s2 right-align\">\r\n                        <a href=\"/\" onClick={logoutHandler}>\r\n                            <i className=\"small material-icons\" style={{marginTop: 24}}>exit_to_app</i>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"col s12\">\r\n                        <ul className=\"collapsible popout\">\r\n                            <li className=\"active\">\r\n                                <div className=\"collapsible-header\">\r\n                                    <i className=\"material-icons\">bookmark</i>\r\n                                    <b>Мои заявления</b>\r\n                                </div>\r\n                                <div className=\"collapsible-body\">\r\n\r\n                                    <table>\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Рег. номер</th>\r\n                                            <th>Уровень образования</th>\r\n                                            <th>Форма обучения</th>\r\n                                            <th>Форма обучения</th>\r\n                                            <th>Направление подготовки (специальность)</th>\r\n                                            <th>Статус</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <NavLink to=\"/create-statement\" className=\"btn red navLinkBtn\">\r\n                                        Добавить заявление\r\n                                    </NavLink>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\http.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\RegPage.js",["106","107","108","109","110"],"import React, {useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\nexport const RegPage = () => {\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [form, setForm] = useState({\r\n        lastName: '',\r\n        firstName: '',\r\n        patronymic: '',\r\n        confirmPassword: '',\r\n        email: ''\r\n    });\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const registrationHandler = async (values) => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/register',\r\n                'POST',\r\n                values);\r\n            message(data.message);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        lastName: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .required('Поле необходимо заполнить'),\r\n        firstName: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .required('Поле необходимо заполнить'),\r\n        email: yup.string()\r\n            .email('Введите верный email')\r\n            .required('Поле необходимо заполнить'),\r\n        password: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .min(8, \"Пароль должен быть длиннее 8 символов\")\r\n            .required('Поле необходимо заполнить'),\r\n        confirmPassword: yup.string()\r\n            .oneOf([yup.ref('password')], 'Пароли не совпадают')\r\n            .required('Поле необходимо заполнить')\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    lastName: '',\r\n                    firstName: '',\r\n                    patronymic: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => {\r\n                    console.log(values);\r\n                    registrationHandler(values);\r\n                }}\r\n                validationSchema={validationsSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Регистрация</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='lastName'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.name}/>\r\n                                        <label htmlFor='lastName'>Фамилия *</label>\r\n                                        {touched.lastName && errors.lastName &&\r\n                                        <p className=\"red-text\">{errors.lastName}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='firstName'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.firstName}/>\r\n                                        <label htmlFor='firstName'>Имя *</label>\r\n                                        {touched.firstName && errors.firstName &&\r\n                                        <p className=\"red-text\">{errors.firstName}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='patronymic'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.patronymic}/>\r\n                                        <label htmlFor='patronymic'>Отчество</label>\r\n                                        {touched.patronymic && errors.patronymic &&\r\n                                        <p className=\"red-text\">{errors.patronymic}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='email'\r\n                                            className='red-input'\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}/>\r\n                                        <label htmlFor='email'>Email *</label>\r\n                                        {touched.email && errors.email &&\r\n                                        <p className=\"red-text\">{errors.email}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}/>\r\n                                        <label htmlFor='password'>Пароль *</label>\r\n                                        {touched.password && errors.password &&\r\n                                        <p className=\"red-text\">{errors.password}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='confirmPassword'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.confirmPassword}/>\r\n                                        <label htmlFor='confirmPassword'>Пароль еще раз *</label>\r\n                                        {touched.confirmPassword && errors.confirmPassword &&\r\n                                        <p className=\"red-text\">{errors.confirmPassword}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Зарегистрироваться\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Авторизация\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\message.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\auth.hook.js",["111"],"import {useState, useCallback, useEffect} from 'react';\r\nimport {useHttp} from \"./http.hook\";\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n    const [userName, setUserName] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n\r\n    const {request} = useHttp();\r\n    const roleHandler = async (token, userId, firstName) => {\r\n        try {\r\n            const getData = await request(\r\n                '/api/auth/role',\r\n                'POST',\r\n                {id: userId});\r\n            console.log(firstName);\r\n            login(token, userId, firstName, getData.role);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const login = useCallback((jwtToken, id, firstName, R) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n        setUserName(firstName);\r\n        setRole(R);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken, userName: firstName, role: R\r\n        }))\r\n    }, []);\r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if (data && data.token) {\r\n            //login(data.token, data.userId, data.userName);\r\n            roleHandler(data.token, data.userId, data.userName);\r\n        }\r\n\r\n        setReady(true);\r\n    }, [login]);\r\n\r\n    return { login, logout, token, userId, ready, userName, role }\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\ActivatePage.js",["112","113","114","115","116"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport const ActivatePage = ({ match }) => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    let token = useParams().token;\r\n    let { firstName } = jwt.decode(token);\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const activateHandler = async () => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/activation',\r\n                'POST',\r\n                {token});\r\n        } catch (e) {}\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Добро пожаловать, {firstName}</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content center-align\">\r\n                                    <button\r\n                                        className=\"btn red btn-large\"\r\n                                        onClick={activateHandler}\r\n                                        type='submit'>\r\n                                        Активируйте вашу учетную запись\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"card-action center-align\">\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Войти\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\Navbar.js",["117"],"import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"sidenav sidenav-fixed blue-grey darken-3\">\r\n            <div className=\"row top_profile\">\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_l z-depth-3\">settings</i>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <img src={logo} alt=\"\" className=\"circle responsive-img top_profile_img z-depth-3\"/>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_r z-depth-3\">notifications</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-align white-text\">\r\n                <h5>{auth.userName}</h5>\r\n            </div>\r\n            <li>\r\n                <NavLink to=\"/home\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Мои заявления</h6>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/personal-data\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">contacts</i>\r\n                    <h6 className=\"h6_navbar\">Персональные данные</h6>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <a href=\"\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">collections_bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Моё поступление</h6>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\PersonalDataPage.js",["118","119","120","121","122","123","124","125","126","127"],"import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {Navbar} from \"../components/Navbar\";\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css';\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Formik, FieldArray} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\nconst CITIZENSHIP = require('../components/citizenship');\r\n\r\nconst genderOptions = [\r\n    {value: 'male', label: 'Мужской'},\r\n    {value: 'female', label: 'Женский'}\r\n];\r\n\r\n\r\nexport const PersonalDataPage = () => {\r\n        const history = useHistory();\r\n        const message = useMessage();\r\n        const {loading, error, request, clearError} = useHttp();\r\n        const auth = useContext(AuthContext);\r\n        const {userId} = useContext(AuthContext);\r\n        const [data, setData] = useState([]);\r\n\r\n        const logoutHandler = event => {\r\n            event.preventDefault();\r\n            auth.logout();\r\n            history.push('/');\r\n        };\r\n\r\n        useEffect(() => {\r\n            message(error);\r\n            clearError();\r\n        }, [error, message, clearError]);\r\n\r\n\r\n        useEffect(() => {\r\n            let elems = document.querySelectorAll('.collapsible', 'select');\r\n            let instances = M.Collapsible.init(elems, {});\r\n\r\n            let elems2 = document.querySelectorAll('select');\r\n            let instances2 = M.FormSelect.init(elems2, {});\r\n        });\r\n\r\n        const getData = useCallback(async () => {\r\n            try {\r\n                const fetched = await request(`/api/userData/data`,\r\n                    'GET', null,\r\n                    {\r\n                        userId\r\n                    }\r\n                );\r\n                setData(fetched);\r\n                console.log(fetched);\r\n            } catch (e) {\r\n            }\r\n        }, [userId, request]);\r\n\r\n        useEffect(() => {\r\n            getData();\r\n        }, [getData]);\r\n\r\n        const validationsSchema = yup.object().shape({\r\n            lastName: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Поле необходимо заполнить'),\r\n            firstName: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Поле необходимо заполнить'),\r\n            patronymic: yup.string()\r\n                .typeError('Должно быть строкой'),\r\n            DOB: yup.date()\r\n                .typeError('Должно быть датой')\r\n                .required('Обязательное поле'),\r\n            BPL: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Поле необходимо заполнить'),\r\n            gender: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            citizenship: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            passportSeries: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .matches(/^[0-9]{4}$/, 'Должно быть 4 цифры')\r\n                .required('Обязательное поле'),\r\n            passportID: yup.string()\r\n                .typeError('Должно быть числом')\r\n                .matches(/^[0-9]{6}$/, 'Должно быть 6 цифр')\r\n                .required('Обязательное поле'),\r\n            passportIssued: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            departmentCode: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            dateOfIssue: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            region: yup.string()\r\n                .typeError('Должно быть строкой'),\r\n            point: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            district: yup.string()\r\n                .typeError('Должно быть строкой'),\r\n            street: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            house: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .required('Обязательное поле'),\r\n            apartment: yup.string()\r\n                .typeError('Должно быть строкой'),\r\n            phone: yup.string()\r\n                .typeError('Должно быть строкой')\r\n                .matches(/^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$/, 'Формат номера')\r\n                .required('Обязательное поле'),\r\n            file: yup.array().of(yup.object().shape({\r\n                file: yup.mixed().test('fileSize', 'Размер файла больше 10 МБ', (value) => {\r\n                    if (!value) return false;\r\n                    return value.size < 10485760\r\n                }).required(),\r\n                type: yup.string().oneOf(['image/png', 'image/jpeg', 'image/pjpeg'], 'Добавьте файл с правильным форматом').required('Добавьте файл с правильным форматом'),\r\n                name: yup.string().required()\r\n            }).typeError('Добавьте файл')).required('Обязательное поле')\r\n        });\r\n\r\n        const getFileSchema = (file) => file && ({\r\n            file: file,\r\n            type: file.type,\r\n            name: file.name\r\n        });\r\n\r\n        const getError = (touched, error) => {\r\n            return touched && error && <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                             data-success=\"right\">{error}</span>\r\n        };\r\n\r\n        const getArrErrorsMessages = (errors) => {\r\n            const result = [];\r\n            errors && Array.isArray(errors) && errors.forEach((value) => {\r\n                if (typeof value === 'string') {\r\n                    result.push(value)\r\n                } else {\r\n                    Object.values(value).forEach((error) => {\r\n                        result.push(error)\r\n                    })\r\n                }\r\n            });\r\n            return result\r\n        };\r\n\r\n\r\n        const saveHandler = async (values) => {\r\n            try {\r\n                const data = await request(\r\n                    '/api/userData/data/update',\r\n                    'PUT',\r\n                    values,\r\n                    {\r\n                        userId\r\n                    }\r\n                );\r\n                message(data.message);\r\n            } catch (e) {\r\n            }\r\n        };\r\n\r\n        // console.log(data);\r\n\r\n        let st = false;\r\n        let genderList = genderOptions.length > 0\r\n            && genderOptions.map((item) => {\r\n                return (\r\n                    <option value={item.value}>{item.label}</option>\r\n                )\r\n            }, this);\r\n\r\n        let genderList2 = genderOptions.length > 0\r\n            && genderOptions.map((item) => {\r\n                if (item.value === data.gender) {\r\n                    return (\r\n                        <label style={{marginRight: 20}}>\r\n                            <input name=\"group1\" type=\"radio\" value={item.value} checked/>\r\n                            <span>{item.label}</span>\r\n                        </label>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <label style={{marginRight: 20}}>\r\n                            <input name=\"group1\" type=\"radio\" value={item.value}/>\r\n                            <span>{item.label}</span>\r\n                        </label>\r\n                    )\r\n                }\r\n            }, this);\r\n\r\n        let citizenshipList = CITIZENSHIP.length > 0\r\n            && CITIZENSHIP.map((item) => {\r\n                return (\r\n                    <option value={item.value}>{item.label}</option>\r\n                )\r\n            }, this);\r\n\r\n        const [file, setFile] = useState('');\r\n        const [filename, setFilename] = useState('Choose File');\r\n\r\n        const onChange = e => {\r\n            setFile(e.target.files[0]);\r\n            setFilename(e.target.files[0].name);\r\n        };\r\n\r\n        const onSubmit = async e => {\r\n            console.log('EEEEEEE');\r\n            e.preventDefault();\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            console.log(file);\r\n            try {\r\n                const data = await request(\r\n                    '/api/userData/data/loading',\r\n                    'POST',\r\n                    formData,\r\n                    {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                );\r\n                message(data.message);\r\n            } catch (e) {\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\"><Navbar/></div>\r\n                <div className=\"col app-main valign-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col s10\">\r\n                            <h4>Система электронной подачи документов</h4>\r\n                        </div>\r\n                        <div className=\"col s2 right-align\">\r\n                            <a href=\"/\" onClick={logoutHandler}>\r\n                                <i className=\"small material-icons\" style={{marginTop: 24}}>exit_to_app</i>\r\n                            </a>\r\n                        </div>\r\n                        <Formik initialValues={{\r\n                            lastName: `${data.lastName || ''}`,\r\n                            firstName: `${data.firstName || ''}`,\r\n                            patronymic: `${data.patronymic || ''}`,\r\n                            DOB: `${data.DOB || ''}`,\r\n                            BPL: `${data.BPL || ''}`,\r\n                            gender: `${data.gender || ''}`,\r\n                            citizenship: `${data.citizenship || ''}`,\r\n                            citizenship2: `${data.citizenship2 || ''}`,\r\n                            passportSeries: `${data.passportSeries || ''}`,\r\n                            passportID: `${data.passportID || ''}`,\r\n                            passportIssued: `${data.passportIssued || ''}`,\r\n                            departmentCode: `${data.departmentCode || ''}`,\r\n                            dateOfIssue: `${data.dateOfIssue || ''}`,\r\n                            region: `${data.region || ''}`,\r\n                            point: `${data.point || ''}`,\r\n                            district: `${data.district || ''}`,\r\n                            street: `${data.street || ''}`,\r\n                            house: `${data.house || ''}`,\r\n                            apartment: `${data.apartment || ''}`,\r\n                            phone: `${data.phone || ''}`,\r\n                            residenceAddress: `${data.residenceAddress || ''}`,\r\n                            file: undefined\r\n                        }}\r\n                                validationSchema={validationsSchema}\r\n                                onSubmit={values => {\r\n                                    console.log(values);\r\n                                    saveHandler(values);\r\n                                }}\r\n                                enableReinitialize={true}\r\n                        >\r\n                            {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                                <div className=\"col s12\">\r\n                                    <ul className=\"collapsible popout\">\r\n                                        <li className=\"active\">\r\n                                            <div className=\"collapsible-header\">\r\n                                                <i className=\"material-icons\">person</i>\r\n                                                Личные сведения\r\n                                            </div>\r\n                                            <div className=\"collapsible-body\">\r\n                                                <div className=\"row\" style={{margin: 0}}>\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s6\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='lastName'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.lastName}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='lastName'>1.1 Фамилия\r\n                                                                *</label>\r\n                                                            {touched.lastName && errors.lastName &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.lastName}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s6\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='firstName'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.firstName}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='firstName'>1.2 Имя *</label>\r\n                                                            {touched.firstName && errors.firstName &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.firstName}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s6\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='patronymic'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.patronymic}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='patronymic'>1.3\r\n                                                                Отчество</label>\r\n                                                            {touched.patronymic && errors.patronymic &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.patronymic}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s6\">\r\n                                                            <input\r\n                                                                type='Date'\r\n                                                                className='red-input'\r\n                                                                name='DOB'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.DOB}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='DOB'>1.4 Дата рождения\r\n                                                                *</label>\r\n                                                            {touched.DOB && errors.DOB &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.DOB}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s8\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='BPL'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.BPL}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='BPL'>1.5 Место рождения (по\r\n                                                                паспорту) *</label>\r\n                                                            {touched.BPL && errors.BPL &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.BPL}</span>}\r\n                                                        </div>\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <select\r\n                                                                name='gender'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.gender}\r\n                                                            >\r\n                                                                <option value=\"\" disabled selected>Выберите пол</option>\r\n                                                                {genderList}\r\n                                                            </select>\r\n                                                            <label htmlFor='gender'>1.6 Пол *</label>\r\n                                                            {touched.gender && errors.gender &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.gender}</span>}\r\n                                                            {/*<p name='gender'>*/}\r\n                                                            {/*    <label htmlFor='gender' style={{marginRight: 20}}>1.6 Пол*/}\r\n                                                            {/*        *</label>*/}\r\n                                                            {/*    {genderList2}*/}\r\n                                                            {/*</p>*/}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s6\">\r\n                                                            <select\r\n                                                                name=\"citizenship\"\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.citizenship}\r\n                                                            >\r\n                                                                <option value=\"\" disabled selected>Выберите граждансво\r\n                                                                </option>\r\n                                                                {citizenshipList}\r\n                                                            </select>\r\n                                                            <label htmlFor='citizenship'>1.7 Гражданство *</label>\r\n                                                            {touched.citizenship && errors.citizenship &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.citizenship}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s6\">\r\n                                                            <select\r\n                                                                name=\"citizenship2\"\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.citizenship2}>\r\n                                                                <option value=\"\" disabled selected></option>\r\n                                                                {citizenshipList}\r\n                                                            </select>\r\n                                                            <label htmlFor='citizenship2'>\r\n                                                                1.8 Второе гражданство (при наличии двойного\r\n                                                                гражданства)</label>\r\n                                                            {touched.citizenship2 && errors.citizenship2 &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.citizenship2}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"file-field input-field\">\r\n                                                        <div className=\"btn white red-text text-accent-2\">\r\n                                                            <i className=\"material-icons right\">add_a_photo</i>\r\n                                                            <span>Добавить фото</span>\r\n                                                            <FieldArray name='file'>\r\n                                                                {(arrayHelper) => (\r\n                                                                    <input type=\"file\"\r\n                                                                           name='file'\r\n                                                                           onChange={event => {\r\n                                                                               const {files} = event.target;\r\n                                                                               const file = getFileSchema(files.item(0));\r\n                                                                               if (!file) {\r\n                                                                                   arrayHelper.remove(0);\r\n                                                                               }\r\n                                                                               if (Array.isArray(values.file)) {\r\n                                                                                   arrayHelper.replace(0, file);\r\n                                                                               } else {\r\n                                                                                   arrayHelper.push(file);\r\n                                                                               }\r\n                                                                           }}\r\n                                                                           onBlur={handleBlur}/>\r\n                                                                )}\r\n                                                            </FieldArray>\r\n                                                        </div>\r\n                                                        <div className=\"file-path-wrapper\">\r\n                                                            <input className=\"file-path validate\" type=\"text\"/>\r\n                                                        </div>\r\n                                                        {getArrErrorsMessages(errors.file).map((error) => getError(true, error))}\r\n                                                    </div>\r\n                                                    <form onSubmit={onSubmit}>\r\n                                                        <div className=\"file-field input-field\">\r\n                                                            <div className=\"btn white red-text text-accent-2\">\r\n                                                                <i className=\"material-icons right\">add_a_photo</i>\r\n                                                                <span>Добавить фото</span>\r\n                                                                <input type=\"file\"\r\n                                                                       id='customFile'\r\n                                                                       onChange={onChange}\r\n                                                                       onBlur={handleBlur}/>\r\n                                                            </div>\r\n                                                            <div className=\"file-path-wrapper\">\r\n                                                                <input className=\"file-path validate\" type=\"text\"/>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <input\r\n                                                            type='submit'\r\n                                                            value='Upload'\r\n                                                            className='btn red'\r\n                                                        />\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className=\"collapsible-header\">\r\n                                                <i className=\"material-icons\">folder_shared</i>\r\n                                                Документ удостоверяющий личность и гражданство\r\n                                            </div>\r\n                                            <div className=\"collapsible-body\">\r\n                                                <div className=\"row\" style={{margin: 0}}>\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='passportSeries'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.passportSeries}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='passportSeries'>2.1 Серия\r\n                                                                паспорта *</label>\r\n                                                            {touched.passportSeries && errors.passportSeries &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.passportSeries}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='passportID'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.passportID}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='passportID'>2.2 Номер\r\n                                                                паспорта\r\n                                                                *</label>\r\n                                                            {touched.passportID && errors.passportID &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.passportID}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='Date'\r\n                                                                className='red-input'\r\n                                                                name='dateOfIssue'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.dateOfIssue}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='dateOfIssue'>2.3 Дата выдачи\r\n                                                                *</label>\r\n                                                            {touched.dateOfIssue && errors.dateOfIssue &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.dateOfIssue}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s8\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='passportIssued'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.passportIssued}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='passportIssued'>2.4 Паспорт\r\n                                                                выдан\r\n                                                                *</label>\r\n                                                            {touched.passportIssued && errors.passportIssued &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.passportIssued}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='departmentCode'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.departmentCode}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='departmentCode'>2.5 Код\r\n                                                                подразделения *</label>\r\n                                                            {touched.departmentCode && errors.departmentCode &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.departmentCode}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"input-field col s4 offset-s8 right-align\">\r\n                                                        <button className=\"btn white red-text text-accent-2\">\r\n                                                            Добавить фото паспорта\r\n                                                            <i className=\"material-icons right\">add_a_photo</i>\r\n                                                        </button>\r\n                                                        <p className=\"red-text\"></p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className=\"collapsible-header\">\r\n                                                <i className=\"material-icons\">location_on</i>\r\n                                                Адрес прописки\r\n                                            </div>\r\n                                            <div className=\"collapsible-body\">\r\n                                                <div className=\"row\" style={{margin: 0}}>\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='region'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.region}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='region'>3.1 Регион</label>\r\n                                                            {touched.region && errors.region &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.region}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='point'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.point}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='point'>3.2 Пункт *</label>\r\n                                                            {touched.point && errors.point &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.point}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='district'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.district}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='district'>3.3 Район</label>\r\n                                                            {touched.district && errors.district &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.district}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\" style={{margin: 0}}>\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='street'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.street}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='street'>3.4 Улица *</label>\r\n                                                            {touched.street && errors.street &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.street}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='house'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.house}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='house'>3.5 Номер дома\r\n                                                                *</label>\r\n                                                            {touched.house && errors.house &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.house}</span>}\r\n                                                        </div>\r\n\r\n                                                        <div className=\"input-field col s4\">\r\n                                                            <input\r\n                                                                type='text'\r\n                                                                className='red-input'\r\n                                                                name='apartment'\r\n                                                                onChange={handleChange}\r\n                                                                onBlur={handleBlur}\r\n                                                                value={values.apartment}\r\n                                                            />\r\n                                                            <label className=\"active\" htmlFor='apartment'>3.6\r\n                                                                Квартира</label>\r\n                                                            {touched.apartment && errors.apartment &&\r\n                                                            <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                                  data-success=\"right\">{errors.apartment}</span>}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className=\"collapsible-header\">\r\n                                                <i className=\"material-icons\">info</i>\r\n                                                Контактная информация\r\n                                            </div>\r\n                                            <div className=\"collapsible-body\">\r\n                                                <div className=\"row\" style={{margin: 0}}>\r\n                                                    <div className=\"input-field col s8\">\r\n                                                        <input\r\n                                                            type='text'\r\n                                                            className='red-input'\r\n                                                            name='residenceAddress'\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            value={values.residenceAddress}\r\n                                                        />\r\n                                                        <label className=\"active\" htmlFor='residenceAddress'>4.1 Адрес\r\n                                                            фактического места проживания (оставьте пустым, если совпадает с\r\n                                                            адресом прописки)</label>\r\n                                                        {touched.residenceAddress && errors.residenceAddress &&\r\n                                                        <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                              data-success=\"right\">{errors.residenceAddress}</span>}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"input-field col s4\">\r\n                                                        <input\r\n                                                            type='text'\r\n                                                            className='red-input'\r\n                                                            name='phone'\r\n                                                            onChange={handleChange}\r\n                                                            onBlur={handleBlur}\r\n                                                            value={values.phone}\r\n                                                        />\r\n                                                        <label className=\"active\" htmlFor='phone'>4.2 Телефон *</label>\r\n                                                        {touched.phone && errors.phone &&\r\n                                                        <span className=\"helper-text red-text\" data-error=\"wrong\"\r\n                                                              data-success=\"right\">{errors.phone}</span>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className=\"collapsible-header\">\r\n                                                <i className=\"material-icons\">people</i>\r\n                                                Родственники и законные представители\r\n                                            </div>\r\n                                            <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Сохранить\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n;","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\AdminHomePage.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\AdminNavbar.js",["128"],"import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AdminNavbar = () => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"sidenav sidenav-fixed blue-grey darken-3\">\r\n            <div className=\"row top_profile\">\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_l z-depth-3\">settings</i>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <img src={logo} alt=\"\" className=\"circle responsive-img top_profile_img z-depth-3\"/>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_r z-depth-3\">notifications</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-align white-text\">\r\n                <h5>{ auth.userName }</h5>\r\n            </div>\r\n            <li>\r\n                <a href=\"\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Мои заявления</h6>\r\n                </a>\r\n                <NavLink to=\"/directions\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">collections_bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Направления</h6>\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CustomSelect.js",["129","130"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CreateStatementPage.js",["131","132","133","134","135","136","137","138"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\DirectionsPage.js",["139","140","141","142"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\CreateDirectionPage.js",["143","144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":7,"column":9,"nodeType":"153","messageId":"154","endLine":7,"endColumn":15},{"ruleId":"151","severity":1,"message":"155","line":8,"column":9,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"156","line":1,"column":16,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"155","line":10,"column":9,"nodeType":"153","messageId":"154","endLine":10,"endColumn":16},{"ruleId":"151","severity":1,"message":"157","line":1,"column":39,"nodeType":"153","messageId":"154","endLine":1,"endColumn":47},{"ruleId":"158","severity":1,"message":"159","line":58,"column":37,"nodeType":"160","endLine":58,"endColumn":54},{"ruleId":"161","severity":1,"message":"162","line":91,"column":60,"nodeType":"163","messageId":"164","endLine":91,"endColumn":62},{"ruleId":"161","severity":1,"message":"162","line":91,"column":70,"nodeType":"163","messageId":"164","endLine":91,"endColumn":72},{"ruleId":"151","severity":1,"message":"157","line":1,"column":39,"nodeType":"153","messageId":"154","endLine":1,"endColumn":47},{"ruleId":"151","severity":1,"message":"165","line":5,"column":9,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"151","severity":1,"message":"166","line":20,"column":13,"nodeType":"153","messageId":"154","endLine":20,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":23,"column":13,"nodeType":"153","messageId":"154","endLine":23,"endColumn":23},{"ruleId":"151","severity":1,"message":"168","line":12,"column":12,"nodeType":"153","messageId":"154","endLine":12,"endColumn":16},{"ruleId":"151","severity":1,"message":"169","line":12,"column":18,"nodeType":"153","messageId":"154","endLine":12,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":77,"column":37,"nodeType":"160","endLine":77,"endColumn":54},{"ruleId":"161","severity":1,"message":"162","line":158,"column":60,"nodeType":"163","messageId":"164","endLine":158,"endColumn":62},{"ruleId":"161","severity":1,"message":"162","line":158,"column":70,"nodeType":"163","messageId":"164","endLine":158,"endColumn":72},{"ruleId":"170","severity":1,"message":"171","line":52,"column":8,"nodeType":"172","endLine":52,"endColumn":15,"suggestions":"173"},{"ruleId":"151","severity":1,"message":"157","line":1,"column":39,"nodeType":"153","messageId":"154","endLine":1,"endColumn":47},{"ruleId":"151","severity":1,"message":"174","line":4,"column":13,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"175","line":13,"column":11,"nodeType":"153","messageId":"154","endLine":13,"endColumn":15},{"ruleId":"151","severity":1,"message":"176","line":27,"column":19,"nodeType":"153","messageId":"154","endLine":27,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":48,"column":37,"nodeType":"160","endLine":48,"endColumn":54},{"ruleId":"177","severity":1,"message":"178","line":38,"column":17,"nodeType":"160","endLine":38,"endColumn":51},{"ruleId":"151","severity":1,"message":"179","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":16},{"ruleId":"151","severity":1,"message":"166","line":41,"column":17,"nodeType":"153","messageId":"154","endLine":41,"endColumn":26},{"ruleId":"151","severity":1,"message":"167","line":44,"column":17,"nodeType":"153","messageId":"154","endLine":44,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":120,"column":37,"nodeType":"182","messageId":"183","endLine":120,"endColumn":38,"suggestions":"184"},{"ruleId":"180","severity":1,"message":"181","line":120,"column":57,"nodeType":"182","messageId":"183","endLine":120,"endColumn":58,"suggestions":"185"},{"ruleId":"151","severity":1,"message":"186","line":175,"column":13,"nodeType":"153","messageId":"154","endLine":175,"endColumn":15},{"ruleId":"151","severity":1,"message":"187","line":183,"column":13,"nodeType":"153","messageId":"154","endLine":183,"endColumn":24},{"ruleId":"151","severity":1,"message":"188","line":210,"column":16,"nodeType":"153","messageId":"154","endLine":210,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":744,"column":60,"nodeType":"163","messageId":"164","endLine":744,"endColumn":62},{"ruleId":"161","severity":1,"message":"162","line":744,"column":70,"nodeType":"163","messageId":"164","endLine":744,"endColumn":72},{"ruleId":"177","severity":1,"message":"178","line":26,"column":17,"nodeType":"160","endLine":26,"endColumn":51},{"ruleId":"151","severity":1,"message":"165","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":5,"column":1,"nodeType":"191","endLine":19,"endColumn":2},{"ruleId":"151","severity":1,"message":"157","line":1,"column":39,"nodeType":"153","messageId":"154","endLine":1,"endColumn":47},{"ruleId":"151","severity":1,"message":"192","line":17,"column":21,"nodeType":"153","messageId":"154","endLine":17,"endColumn":26},{"ruleId":"151","severity":1,"message":"193","line":17,"column":28,"nodeType":"153","messageId":"154","endLine":17,"endColumn":35},{"ruleId":"151","severity":1,"message":"194","line":17,"column":37,"nodeType":"153","messageId":"154","endLine":17,"endColumn":47},{"ruleId":"151","severity":1,"message":"166","line":27,"column":13,"nodeType":"153","messageId":"154","endLine":27,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":30,"column":13,"nodeType":"153","messageId":"154","endLine":30,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":380,"column":56,"nodeType":"163","messageId":"164","endLine":380,"endColumn":58},{"ruleId":"161","severity":1,"message":"162","line":380,"column":66,"nodeType":"163","messageId":"164","endLine":380,"endColumn":68},{"ruleId":"151","severity":1,"message":"157","line":1,"column":39,"nodeType":"153","messageId":"154","endLine":1,"endColumn":47},{"ruleId":"151","severity":1,"message":"165","line":5,"column":9,"nodeType":"153","messageId":"154","endLine":5,"endColumn":15},{"ruleId":"151","severity":1,"message":"166","line":20,"column":13,"nodeType":"153","messageId":"154","endLine":20,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":23,"column":13,"nodeType":"153","messageId":"154","endLine":23,"endColumn":23},{"ruleId":"151","severity":1,"message":"179","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":16},{"ruleId":"151","severity":1,"message":"195","line":15,"column":18,"nodeType":"153","messageId":"154","endLine":15,"endColumn":25},{"ruleId":"151","severity":1,"message":"166","line":25,"column":13,"nodeType":"153","messageId":"154","endLine":25,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":28,"column":13,"nodeType":"153","messageId":"154","endLine":28,"endColumn":23},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'useHttp' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Formik' is defined but never used.","'instances' is assigned a value but never used.","'instances2' is assigned a value but never used.","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roleHandler'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'yup' is defined but never used.","'auth' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["199","200"],["201","202"],"'st' is assigned a value but never used.","'genderList2' is assigned a value but never used.","'filename' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'error' is assigned a value but never used.","'request' is assigned a value but never used.","'clearError' is assigned a value but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"208","fix":"209","desc":"210"},{"messageId":"205","fix":"211","desc":"207"},{"messageId":"208","fix":"212","desc":"210"},"Update the dependencies array to be: [login, roleHandler]",{"range":"213","text":"214"},"removeEscape",{"range":"215","text":"216"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"217","text":"218"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"219","text":"216"},{"range":"220","text":"218"},[1577,1584],"[login, roleHandler]",[4612,4613],"",[4612,4612],"\\",[4632,4633],[4632,4632]]