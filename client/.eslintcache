[{"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\index.js":"1","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\App.js":"2","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\routes.js":"4","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\AuthPage.js":"5","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\HomePage.js":"6","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\http.hook.js":"7","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\RegPage.js":"8","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\message.hook.js":"9","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\auth.hook.js":"10","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\context\\AuthContext.js":"11","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\ActivatePage.js":"12","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\Navbar.js":"13","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\PersonalDataPage.js":"14","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\AdminHomePage.js":"15","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\AdminNavbar.js":"16","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CustomSelect.js":"17","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CreateStatementPage.js":"18"},{"size":500,"mtime":1608129276431,"results":"19","hashOfConfig":"20"},{"size":849,"mtime":1609700434108,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1876,"mtime":1609780067750,"results":"23","hashOfConfig":"20"},{"size":5330,"mtime":1608749948546,"results":"24","hashOfConfig":"20"},{"size":3353,"mtime":1609782365934,"results":"25","hashOfConfig":"20"},{"size":1128,"mtime":1608750615974,"results":"26","hashOfConfig":"20"},{"size":9424,"mtime":1608936228059,"results":"27","hashOfConfig":"20"},{"size":211,"mtime":1607717363187,"results":"28","hashOfConfig":"20"},{"size":1660,"mtime":1609700307536,"results":"29","hashOfConfig":"20"},{"size":249,"mtime":1608752949743,"results":"30","hashOfConfig":"20"},{"size":3088,"mtime":1607965335236,"results":"31","hashOfConfig":"20"},{"size":2030,"mtime":1608753375555,"results":"32","hashOfConfig":"20"},{"size":51631,"mtime":1609790463934,"results":"33","hashOfConfig":"20"},{"size":1106,"mtime":1608751220725,"results":"34","hashOfConfig":"20"},{"size":1422,"mtime":1608753375545,"results":"35","hashOfConfig":"20"},{"size":511,"mtime":1609159283352,"results":"36","hashOfConfig":"20"},{"size":19112,"mtime":1609788210995,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1w02xvi",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\index.js",[],["82","83"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\App.js",["84","85"],"import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'materialize-css';\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport {useHttp} from \"./hooks/http.hook\";\n\nfunction App() {\n    const {token, login, logout, userId, userName, role} = useAuth();\n    const isAuthenticated = !!token;\n    const routes = useRoutes(isAuthenticated, role);\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAuthenticated, userName, role\n        }}>\n            <Router>\n                <div className=\"navigationPanel\">\n                    {routes}\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\routes.js",["86","87"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\AuthPage.js",["88","89","90","91"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const loginHandler = async (values) => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/login',\r\n                'POST',\r\n                values);\r\n            auth.login(data.token, data.userId, data.userName, data.role);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        email: yup.string()\r\n            .email('Введите верный email')\r\n            .required('Поле необходимо заполнить'),\r\n        password: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .min(8, \"Пароль должен быть длиннее 8 символов\")\r\n            .required('Поле необходимо заполнить'),\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => {\r\n                    loginHandler(values);\r\n                }}\r\n                validationSchema={validationsSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Авторизация</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='email'\r\n                                            className='red-input'\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}/>\r\n                                        <label htmlFor='email'>Email</label>\r\n                                        {touched.email && errors.email &&\r\n                                        <p className=\"red-text\">{errors.email}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}/>\r\n                                        <label htmlFor='password'>Пароль</label>\r\n                                        {touched.password && errors.password &&\r\n                                        <p className=\"red-text\">{errors.password}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Войти\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/registration\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Регистрация\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\HomePage.js",["92","93","94","95"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\http.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\RegPage.js",["96","97","98","99","100"],"import React, {useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\nexport const RegPage = () => {\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [form, setForm] = useState({\r\n        lastName: '',\r\n        firstName: '',\r\n        patronymic: '',\r\n        confirmPassword: '',\r\n        email: ''\r\n    });\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const registrationHandler = async (values) => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/register',\r\n                'POST',\r\n                values);\r\n            message(data.message);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        lastName: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .required('Поле необходимо заполнить'),\r\n        firstName: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .required('Поле необходимо заполнить'),\r\n        email: yup.string()\r\n            .email('Введите верный email')\r\n            .required('Поле необходимо заполнить'),\r\n        password: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .min(8, \"Пароль должен быть длиннее 8 символов\")\r\n            .required('Поле необходимо заполнить'),\r\n        confirmPassword: yup.string()\r\n            .oneOf([yup.ref('password')], 'Пароли не совпадают')\r\n            .required('Поле необходимо заполнить')\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    lastName: '',\r\n                    firstName: '',\r\n                    patronymic: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => {\r\n                    console.log(values);\r\n                    registrationHandler(values);\r\n                }}\r\n                validationSchema={validationsSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Регистрация</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='lastName'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.name}/>\r\n                                        <label htmlFor='lastName'>Фамилия *</label>\r\n                                        {touched.lastName && errors.lastName &&\r\n                                        <p className=\"red-text\">{errors.lastName}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='firstName'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.firstName}/>\r\n                                        <label htmlFor='firstName'>Имя *</label>\r\n                                        {touched.firstName && errors.firstName &&\r\n                                        <p className=\"red-text\">{errors.firstName}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='patronymic'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.patronymic}/>\r\n                                        <label htmlFor='patronymic'>Отчество</label>\r\n                                        {touched.patronymic && errors.patronymic &&\r\n                                        <p className=\"red-text\">{errors.patronymic}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='email'\r\n                                            className='red-input'\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}/>\r\n                                        <label htmlFor='email'>Email *</label>\r\n                                        {touched.email && errors.email &&\r\n                                        <p className=\"red-text\">{errors.email}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}/>\r\n                                        <label htmlFor='password'>Пароль *</label>\r\n                                        {touched.password && errors.password &&\r\n                                        <p className=\"red-text\">{errors.password}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='confirmPassword'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.confirmPassword}/>\r\n                                        <label htmlFor='confirmPassword'>Пароль еще раз *</label>\r\n                                        {touched.confirmPassword && errors.confirmPassword &&\r\n                                        <p className=\"red-text\">{errors.confirmPassword}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Зарегистрироваться\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Авторизация\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\message.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\auth.hook.js",["101"],"import {useState, useCallback, useEffect} from 'react';\r\nimport {useHttp} from \"./http.hook\";\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n    const [userName, setUserName] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n\r\n    const {request} = useHttp();\r\n    const roleHandler = async (token, userId, firstName) => {\r\n        try {\r\n            const getData = await request(\r\n                '/api/auth/role',\r\n                'POST',\r\n                {id: userId});\r\n            console.log(firstName);\r\n            login(token, userId, firstName, getData.role);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const login = useCallback((jwtToken, id, firstName, R) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n        setUserName(firstName);\r\n        setRole(R);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken, userName: firstName, role: R\r\n        }))\r\n    }, []);\r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        if (data && data.token) {\r\n            //login(data.token, data.userId, data.userName);\r\n            roleHandler(data.token, data.userId, data.userName);\r\n        }\r\n\r\n        setReady(true);\r\n    }, [login]);\r\n\r\n    return { login, logout, token, userId, ready, userName, role }\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\ActivatePage.js",["102","103","104","105","106"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport const ActivatePage = ({ match }) => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    let token = useParams().token;\r\n    let { firstName } = jwt.decode(token);\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const activateHandler = async () => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/activation',\r\n                'POST',\r\n                {token});\r\n        } catch (e) {}\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Добро пожаловать, {firstName}</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content center-align\">\r\n                                    <button\r\n                                        className=\"btn red btn-large\"\r\n                                        onClick={activateHandler}\r\n                                        type='submit'>\r\n                                        Активируйте вашу учетную запись\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"card-action center-align\">\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Войти\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\Navbar.js",["107"],"import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"sidenav sidenav-fixed blue-grey darken-3\">\r\n            <div className=\"row top_profile\">\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_l z-depth-3\">settings</i>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <img src={logo} alt=\"\" className=\"circle responsive-img top_profile_img z-depth-3\"/>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_r z-depth-3\">notifications</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-align white-text\">\r\n                <h5>{auth.userName}</h5>\r\n            </div>\r\n            <li>\r\n                <NavLink to=\"/home\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Мои заявления</h6>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/personal-data\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">contacts</i>\r\n                    <h6 className=\"h6_navbar\">Персональные данные</h6>\r\n                </NavLink>\r\n            </li>\r\n            <li>\r\n                <a href=\"\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">collections_bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Моё поступление</h6>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\PersonalDataPage.js",["108","109","110","111","112","113","114","115","116","117"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\AdminHomePage.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\AdminNavbar.js",["118","119"],"import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AdminNavbar = () => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"sidenav sidenav-fixed blue-grey darken-3\">\r\n            <div className=\"row top_profile\">\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_l z-depth-3\">settings</i>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <img src={logo} alt=\"\" className=\"circle responsive-img top_profile_img z-depth-3\"/>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_r z-depth-3\">notifications</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-align white-text\">\r\n                <h5>{ auth.userName }</h5>\r\n            </div>\r\n            <li>\r\n                <a href=\"\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Мои заявления</h6>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CustomSelect.js",["120","121"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\CreateStatementPage.js",["122","123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":7,"column":9,"nodeType":"131","messageId":"132","endLine":7,"endColumn":15},{"ruleId":"129","severity":1,"message":"133","line":8,"column":9,"nodeType":"131","messageId":"132","endLine":8,"endColumn":16},{"ruleId":"129","severity":1,"message":"134","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":10,"column":9,"nodeType":"131","messageId":"132","endLine":10,"endColumn":16},{"ruleId":"129","severity":1,"message":"135","line":1,"column":39,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":58,"column":37,"nodeType":"138","endLine":58,"endColumn":54},{"ruleId":"139","severity":1,"message":"140","line":91,"column":60,"nodeType":"141","messageId":"142","endLine":91,"endColumn":62},{"ruleId":"139","severity":1,"message":"140","line":91,"column":70,"nodeType":"141","messageId":"142","endLine":91,"endColumn":72},{"ruleId":"129","severity":1,"message":"135","line":1,"column":39,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"143","line":5,"column":9,"nodeType":"131","messageId":"132","endLine":5,"endColumn":15},{"ruleId":"129","severity":1,"message":"144","line":20,"column":13,"nodeType":"131","messageId":"132","endLine":20,"endColumn":22},{"ruleId":"129","severity":1,"message":"145","line":23,"column":13,"nodeType":"131","messageId":"132","endLine":23,"endColumn":23},{"ruleId":"129","severity":1,"message":"146","line":12,"column":12,"nodeType":"131","messageId":"132","endLine":12,"endColumn":16},{"ruleId":"129","severity":1,"message":"147","line":12,"column":18,"nodeType":"131","messageId":"132","endLine":12,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":77,"column":37,"nodeType":"138","endLine":77,"endColumn":54},{"ruleId":"139","severity":1,"message":"140","line":158,"column":60,"nodeType":"141","messageId":"142","endLine":158,"endColumn":62},{"ruleId":"139","severity":1,"message":"140","line":158,"column":70,"nodeType":"141","messageId":"142","endLine":158,"endColumn":72},{"ruleId":"148","severity":1,"message":"149","line":52,"column":8,"nodeType":"150","endLine":52,"endColumn":15,"suggestions":"151"},{"ruleId":"129","severity":1,"message":"135","line":1,"column":39,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"152","line":4,"column":13,"nodeType":"131","messageId":"132","endLine":4,"endColumn":16},{"ruleId":"129","severity":1,"message":"153","line":13,"column":11,"nodeType":"131","messageId":"132","endLine":13,"endColumn":15},{"ruleId":"129","severity":1,"message":"154","line":27,"column":19,"nodeType":"131","messageId":"132","endLine":27,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":48,"column":37,"nodeType":"138","endLine":48,"endColumn":54},{"ruleId":"155","severity":1,"message":"156","line":38,"column":17,"nodeType":"138","endLine":38,"endColumn":51},{"ruleId":"129","severity":1,"message":"157","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"144","line":41,"column":17,"nodeType":"131","messageId":"132","endLine":41,"endColumn":26},{"ruleId":"129","severity":1,"message":"145","line":44,"column":17,"nodeType":"131","messageId":"132","endLine":44,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":120,"column":37,"nodeType":"160","messageId":"161","endLine":120,"endColumn":38,"suggestions":"162"},{"ruleId":"158","severity":1,"message":"159","line":120,"column":57,"nodeType":"160","messageId":"161","endLine":120,"endColumn":58,"suggestions":"163"},{"ruleId":"129","severity":1,"message":"164","line":175,"column":13,"nodeType":"131","messageId":"132","endLine":175,"endColumn":15},{"ruleId":"129","severity":1,"message":"165","line":183,"column":13,"nodeType":"131","messageId":"132","endLine":183,"endColumn":24},{"ruleId":"129","severity":1,"message":"166","line":210,"column":16,"nodeType":"131","messageId":"132","endLine":210,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":744,"column":60,"nodeType":"141","messageId":"142","endLine":744,"endColumn":62},{"ruleId":"139","severity":1,"message":"140","line":744,"column":70,"nodeType":"141","messageId":"142","endLine":744,"endColumn":72},{"ruleId":"129","severity":1,"message":"157","line":2,"column":9,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":29,"column":17,"nodeType":"138","endLine":29,"endColumn":51},{"ruleId":"129","severity":1,"message":"143","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":5,"column":1,"nodeType":"169","endLine":19,"endColumn":2},{"ruleId":"129","severity":1,"message":"135","line":1,"column":39,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"144","line":24,"column":13,"nodeType":"131","messageId":"132","endLine":24,"endColumn":22},{"ruleId":"129","severity":1,"message":"145","line":27,"column":13,"nodeType":"131","messageId":"132","endLine":27,"endColumn":23},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'useHttp' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Formik' is defined but never used.","'instances' is assigned a value but never used.","'instances2' is assigned a value but never used.","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roleHandler'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'yup' is defined but never used.","'auth' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["173","174"],["175","176"],"'st' is assigned a value but never used.","'genderList2' is assigned a value but never used.","'filename' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"messageId":"179","fix":"180","desc":"181"},{"messageId":"182","fix":"183","desc":"184"},{"messageId":"179","fix":"185","desc":"181"},{"messageId":"182","fix":"186","desc":"184"},"Update the dependencies array to be: [login, roleHandler]",{"range":"187","text":"188"},"removeEscape",{"range":"189","text":"190"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"191","text":"192"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"193","text":"190"},{"range":"194","text":"192"},[1577,1584],"[login, roleHandler]",[4612,4613],"",[4612,4612],"\\",[4632,4633],[4632,4632]]