[{"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\index.js":"1","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\App.js":"2","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\routes.js":"4","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\AuthPage.js":"5","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\HomePage.js":"6","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\http.hook.js":"7","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\RegPage.js":"8","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\message.hook.js":"9","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\auth.hook.js":"10","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\context\\AuthContext.js":"11","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\ActivatePage.js":"12","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\Navbar.js":"13","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\PersonalDataPage.js":"14","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\AdminHomePage.js":"15","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\AdminNavbar.js":"16"},{"size":500,"mtime":1608129276431,"results":"17","hashOfConfig":"18"},{"size":842,"mtime":1608753760807,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1419,"mtime":1608754254407,"results":"21","hashOfConfig":"18"},{"size":5330,"mtime":1608749948546,"results":"22","hashOfConfig":"18"},{"size":1048,"mtime":1608754206333,"results":"23","hashOfConfig":"18"},{"size":1128,"mtime":1608750615974,"results":"24","hashOfConfig":"18"},{"size":9424,"mtime":1607781163384,"results":"25","hashOfConfig":"18"},{"size":211,"mtime":1607717363187,"results":"26","hashOfConfig":"18"},{"size":1166,"mtime":1608749641361,"results":"27","hashOfConfig":"18"},{"size":249,"mtime":1608752949743,"results":"28","hashOfConfig":"18"},{"size":3088,"mtime":1607965335236,"results":"29","hashOfConfig":"18"},{"size":2030,"mtime":1608753375555,"results":"30","hashOfConfig":"18"},{"size":10814,"mtime":1608153858769,"results":"31","hashOfConfig":"18"},{"size":1106,"mtime":1608751220725,"results":"32","hashOfConfig":"18"},{"size":1422,"mtime":1608753375545,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1w02xvi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\index.js",[],["72","73"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\App.js",["74"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\routes.js",["75","76","77"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\AuthPage.js",["78","79","80","81"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const loginHandler = async (values) => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/login',\r\n                'POST',\r\n                values);\r\n            auth.login(data.token, data.userId, data.userName, data.role);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        email: yup.string()\r\n            .email('Введите верный email')\r\n            .required('Поле необходимо заполнить'),\r\n        password: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .min(8, \"Пароль должен быть длиннее 8 символов\")\r\n            .required('Поле необходимо заполнить'),\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => {\r\n                    loginHandler(values);\r\n                }}\r\n                validationSchema={validationsSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Авторизация</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='email'\r\n                                            className='red-input'\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}/>\r\n                                        <label htmlFor='email'>Email</label>\r\n                                        {touched.email && errors.email &&\r\n                                        <p className=\"red-text\">{errors.email}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}/>\r\n                                        <label htmlFor='password'>Пароль</label>\r\n                                        {touched.password && errors.password &&\r\n                                        <p className=\"red-text\">{errors.password}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Войти\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/registration\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Регистрация\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\HomePage.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\http.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\RegPage.js",["82","83","84","85","86"],"import React, {useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\nexport const RegPage = () => {\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [form, setForm] = useState({\r\n        lastName: '',\r\n        firstName: '',\r\n        patronymic: '',\r\n        confirmPassword: '',\r\n        email: ''\r\n    });\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const registrationHandler = async (values) => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/register',\r\n                'POST',\r\n                values);\r\n            message(data.message);\r\n        } catch (e) {}\r\n    };\r\n\r\n    const validationsSchema = yup.object().shape({\r\n        lastName: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .required('Поле необходимо заполнить'),\r\n        firstName: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .required('Поле необходимо заполнить'),\r\n        email: yup.string()\r\n            .email('Введите верный email')\r\n            .required('Поле необходимо заполнить'),\r\n        password: yup.string()\r\n            .typeError('Должно быть строкой')\r\n            .min(8, \"Пароль должен быть длиннее 8 символов\")\r\n            .required('Поле необходимо заполнить'),\r\n        confirmPassword: yup.string()\r\n            .oneOf([yup.ref('password')], 'Пароли не совпадают')\r\n            .required('Поле необходимо заполнить')\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    lastName: '',\r\n                    firstName: '',\r\n                    patronymic: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => {\r\n                    console.log(values);\r\n                    registrationHandler(values);\r\n                }}\r\n                validationSchema={validationsSchema}\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Регистрация</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='lastName'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.name}/>\r\n                                        <label htmlFor='lastName'>Фамилия *</label>\r\n                                        {touched.lastName && errors.lastName &&\r\n                                        <p className=\"red-text\">{errors.lastName}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='firstName'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.firstName}/>\r\n                                        <label htmlFor='firstName'>Имя *</label>\r\n                                        {touched.firstName && errors.firstName &&\r\n                                        <p className=\"red-text\">{errors.firstName}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='text'\r\n                                            className='red-input'\r\n                                            name='patronymic'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.patronymic}/>\r\n                                        <label htmlFor='patronymic'>Отчество</label>\r\n                                        {touched.patronymic && errors.patronymic &&\r\n                                        <p className=\"red-text\">{errors.patronymic}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='email'\r\n                                            className='red-input'\r\n                                            name='email'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.email}/>\r\n                                        <label htmlFor='email'>Email *</label>\r\n                                        {touched.email && errors.email &&\r\n                                        <p className=\"red-text\">{errors.email}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='password'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}/>\r\n                                        <label htmlFor='password'>Пароль *</label>\r\n                                        {touched.password && errors.password &&\r\n                                        <p className=\"red-text\">{errors.password}</p>}\r\n                                    </div>\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            type='password'\r\n                                            className='red-input'\r\n                                            name='confirmPassword'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.confirmPassword}/>\r\n                                        <label htmlFor='confirmPassword'>Пароль еще раз *</label>\r\n                                        {touched.confirmPassword && errors.confirmPassword &&\r\n                                        <p className=\"red-text\">{errors.confirmPassword}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-action\">\r\n                                    <button\r\n                                        disabled={!isValid && !dirty || loading}\r\n                                        className=\"btn red\"\r\n                                        style={{marginRight: 24}}\r\n                                        onClick={handleSubmit}\r\n                                        type='submit'>\r\n                                        Зарегистрироваться\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Авторизация\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\message.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\hooks\\auth.hook.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\ActivatePage.js",["87","88","89","90","91"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport const ActivatePage = ({ match }) => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    let token = useParams().token;\r\n    let { firstName } = jwt.decode(token);\r\n\r\n    useEffect( () => {\r\n        message(error);\r\n        clearError();\r\n    }, [error, message, clearError]);\r\n\r\n    const activateHandler = async () => {\r\n        try {\r\n            const data = await request(\r\n                '/api/auth/activation',\r\n                'POST',\r\n                {token});\r\n        } catch (e) {}\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    password: '',\r\n                    email: ''\r\n                }}\r\n                validateOnBlur\r\n            >\r\n                {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col s12 m6 offset-m3\">\r\n                            <div className=\"card\" style={{marginTop: 100}}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={logo}/>\r\n                                    <span className=\"card-title\">\r\n                                <h3>Добро пожаловать, {firstName}</h3>\r\n                            </span>\r\n                                </div>\r\n                                <div className=\"card-content center-align\">\r\n                                    <button\r\n                                        className=\"btn red btn-large\"\r\n                                        onClick={activateHandler}\r\n                                        type='submit'>\r\n                                        Активируйте вашу учетную запись\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"card-action center-align\">\r\n                                    <button\r\n                                        className=\"btn white red-text text-accent-2 z-depth-0\">\r\n                                        <NavLink to=\"/\"\r\n                                                 className=\"red-text text-accent-2\">\r\n                                            Войти\r\n                                        </NavLink>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\Navbar.js",["92"],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\PersonalDataPage.js",["93","94","95","96"],"import React, {useContext, useEffect} from 'react';\r\nimport {Navbar} from \"../components/Navbar\";\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css';\r\nimport logo from \"../images/IMG_1737.jpg\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\n\r\nexport const PersonalDataPage = () => {\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault();\r\n        auth.logout();\r\n        history.push('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        let elems = document.querySelectorAll('.collapsible', 'select');\r\n        let instances = M.Collapsible.init(elems, {});\r\n\r\n        let elems2 = document.querySelectorAll('select');\r\n        let instances2 = M.FormSelect.init(elems2, {});\r\n\r\n\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\"><Navbar/></div>\r\n            <div className=\"col app-main valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s10\">\r\n                        <h4>Система электронной подачи документов</h4>\r\n                    </div>\r\n                    <div className=\"col s2 right-align\">\r\n                        <a href=\"/\" onClick={logoutHandler}>\r\n                            <i className=\"small material-icons\" style={{marginTop: 24}}>exit_to_app</i>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"col s12\">\r\n                        <ul className=\"collapsible popout\">\r\n                            <li className=\"active\">\r\n                                <div className=\"collapsible-header\">\r\n                                    <i className=\"material-icons\">person</i>\r\n                                    Личные сведения\r\n                                </div>\r\n                                <div className=\"collapsible-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input\r\n                                                type='text'\r\n                                                className='red-input'\r\n                                                name='lastName'\r\n                                            />\r\n                                            <label htmlFor='lastName'>1.1 Фамилия *</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input\r\n                                                type='text'\r\n                                                className='red-input'\r\n                                                name='firstName'\r\n                                            />\r\n                                            <label htmlFor='firstName'>1.2 Имя *</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\">\r\n                                            <input\r\n                                                type='text'\r\n                                                className='red-input'\r\n                                                name='patronymic'\r\n                                            />\r\n                                            <label htmlFor='patronymic'>1.3 Отчество</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\" style={{marginBottom: 69}}>\r\n                                            <label>\r\n                                                <input type=\"checkbox\" className=\"filled-in checkbox-orange\"/>\r\n                                                <span>1.4 Отчество в паспорте не указано</span>\r\n                                            </label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s4\">\r\n                                            <input\r\n                                                type='Date'\r\n                                                className='red-input'\r\n                                                name='DOB'\r\n                                            />\r\n                                            <label htmlFor='DOB'>1.5 Дата рождения *</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s4\">\r\n                                            <input\r\n                                                type='text'\r\n                                                className='red-input'\r\n                                                name='BPL'\r\n                                            />\r\n                                            <label htmlFor='BPL'>1.6 Место рождения (по паспорту) *</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s4\">\r\n                                            <select>\r\n                                                <option value=\"\" disabled selected>Выберите пол</option>\r\n                                                <option value=\"1\">Мужской</option>\r\n                                                <option value=\"2\">Женский</option>\r\n                                            </select>\r\n                                            <label>1.7 Пол *</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\">\r\n                                            <select>\r\n                                                <option value=\"\" disabled selected>Выберите граждансво</option>\r\n                                                <option value=\"1\">Test 1</option>\r\n                                                <option value=\"2\">Test 2</option>\r\n                                            </select>\r\n                                            <label>1.8 Гражданство *</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s6\">\r\n                                            <select>\r\n                                                <option value=\"\" disabled selected></option>\r\n                                                <option value=\"1\">Test 1</option>\r\n                                                <option value=\"2\">Test 2</option>\r\n                                            </select>\r\n                                            <label>1.9 Второе гражданство (при наличии двойного гражданства)</label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s4\">\r\n                                            <button className=\"btn white red-text text-accent-2\">\r\n                                                Добавить фото\r\n                                            </button>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                        <div className=\"input-field col s8\" >\r\n                                            <label>\r\n                                                <input type=\"checkbox\" className=\"filled-in checkbox-orange\"/>\r\n                                                <span>Согласен на обработку персональных данных *</span>\r\n                                            </label>\r\n                                            <p className=\"red-text\"></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"collapsible-header\">\r\n                                    <i className=\"material-icons\">folder_shared</i>\r\n                                    Документ удостоверяющий личность и гражданство\r\n                                </div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"collapsible-header\">\r\n                                    <i className=\"material-icons\">location_on</i>\r\n                                    Адрес\r\n                                </div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"collapsible-header\">\r\n                                    <i className=\"material-icons\">info</i>\r\n                                    Контактная информация\r\n                                </div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"collapsible-header\">\r\n                                    <i className=\"material-icons\">people</i>\r\n                                    Родственники и законные представители\r\n                                </div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};","C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\pages\\adminPages\\AdminHomePage.js",[],"C:\\Users\\Not\\WebstormProjects\\mern-project\\client\\src\\components\\AdminNavbar.js",["97","98"],"import React, {useContext} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../images/IMG_1737.jpg'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AdminNavbar = () => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"sidenav sidenav-fixed blue-grey darken-3\">\r\n            <div className=\"row top_profile\">\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_l z-depth-3\">settings</i>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <img src={logo} alt=\"\" className=\"circle responsive-img top_profile_img z-depth-3\"/>\r\n                </div>\r\n                <div className=\"col s4\">\r\n                    <i className=\"small material-icons md-light circle blue-grey lighten-1 top_profile_i_r z-depth-3\">notifications</i>\r\n                </div>\r\n            </div>\r\n            <div className=\"row center-align white-text\">\r\n                <h5>{ auth.userName }</h5>\r\n            </div>\r\n            <li>\r\n                <a href=\"\" className=\"white-text\">\r\n                    <i className=\"extra-small material-icons md-light\">bookmark</i>\r\n                    <h6 className=\"h6_navbar\">Мои заявления</h6>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n};",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":7,"column":9,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"103","severity":1,"message":"107","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"108","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":22},{"ruleId":"103","severity":1,"message":"109","line":9,"column":9,"nodeType":"105","messageId":"106","endLine":9,"endColumn":20},{"ruleId":"103","severity":1,"message":"110","line":1,"column":39,"nodeType":"105","messageId":"106","endLine":1,"endColumn":47},{"ruleId":"111","severity":1,"message":"112","line":58,"column":37,"nodeType":"113","endLine":58,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":91,"column":60,"nodeType":"116","messageId":"117","endLine":91,"endColumn":62},{"ruleId":"114","severity":1,"message":"115","line":91,"column":70,"nodeType":"116","messageId":"117","endLine":91,"endColumn":72},{"ruleId":"103","severity":1,"message":"118","line":12,"column":12,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},{"ruleId":"103","severity":1,"message":"119","line":12,"column":18,"nodeType":"105","messageId":"106","endLine":12,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":77,"column":37,"nodeType":"113","endLine":77,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":158,"column":60,"nodeType":"116","messageId":"117","endLine":158,"endColumn":62},{"ruleId":"114","severity":1,"message":"115","line":158,"column":70,"nodeType":"116","messageId":"117","endLine":158,"endColumn":72},{"ruleId":"103","severity":1,"message":"110","line":1,"column":39,"nodeType":"105","messageId":"106","endLine":1,"endColumn":47},{"ruleId":"103","severity":1,"message":"120","line":4,"column":13,"nodeType":"105","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"121","line":13,"column":11,"nodeType":"105","messageId":"106","endLine":13,"endColumn":15},{"ruleId":"103","severity":1,"message":"122","line":27,"column":19,"nodeType":"105","messageId":"106","endLine":27,"endColumn":23},{"ruleId":"111","severity":1,"message":"112","line":48,"column":37,"nodeType":"113","endLine":48,"endColumn":54},{"ruleId":"123","severity":1,"message":"124","line":38,"column":17,"nodeType":"113","endLine":38,"endColumn":51},{"ruleId":"103","severity":1,"message":"125","line":3,"column":9,"nodeType":"105","messageId":"106","endLine":3,"endColumn":16},{"ruleId":"103","severity":1,"message":"126","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":12},{"ruleId":"103","severity":1,"message":"127","line":21,"column":13,"nodeType":"105","messageId":"106","endLine":21,"endColumn":22},{"ruleId":"103","severity":1,"message":"128","line":24,"column":13,"nodeType":"105","messageId":"106","endLine":24,"endColumn":23},{"ruleId":"103","severity":1,"message":"125","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":29,"column":17,"nodeType":"113","endLine":29,"endColumn":51},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'AdminHomePage' is defined but never used.","'AuthContext' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","'yup' is defined but never used.","'auth' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'logo' is defined but never used.","'instances' is assigned a value but never used.","'instances2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]